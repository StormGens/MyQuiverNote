{
  "title": "编译Android 源码",
  "cells": [
    {
      "type": "markdown",
      "data": "**本文主要包含以下几个方面**\n1. 创建Android源码的编译环境（Mac OS X）\n2. 下载Android源码\n3. 编译Android源码\n4. 将Android源码导入到Android Studio阅读\n\n**本文所依赖运行环境**\n1. Mac OS X 10.11.2\n2. JDK 8\n3. Xcode 7.2\n\n# 创建Android源码的编译环境（Mac OS X）\n### 一、创立一个大小写敏感的磁盘镜像\n因为Mac OS 文件管理系统对于文件名大小写特殊处理，我们需要建立一个大小写敏感的磁盘镜像\n我们可以用Mac OS自带的磁盘工具软件，也可以使用命令行，在终端中敲入：\n```\n# hdiutil create -type SPARSE -fs 'Case-sensitive Journaled HFS+' -size 40g ~/android.dmg\n```\n这样就在你的HOME目录下建立了一个名字为`android.dmg`或者`android.dmg.sparseimage`的文件。\n如果你随后想调整该磁盘镜像的大小，可以使用以下命令：\n```\n# hdiutil resize -size <new-size-you-want>g ~/android.dmg.sparseimage\n```\n现在，你已拥有一个在HOME目录下得`android.dmg`或者`android.dmg.sparseimage`文件。\n所以你可以在你的`~/.bash_profile`中加入以下方法：\n加载镜像：\n```\n# mount the android file image\nfunction mountAndroid { hdiutil attach ~/android.dmg -mountpoint /Volumes/android; }\n```\n卸载镜像:\n```\n# unmount the android file image\nfunction umountAndroid() { hdiutil detach /Volumes/android; }\n```\n###  二、安装必须的软件和包库\n##### 1.安装JDK\n最近的Android版本（master分支）安装 jdk 8u45 或者更新的。所需jdk版本参考链接：https://source.android.com/source/requirements.html\n#####2.必需的包\n1. 安装Xcode\n2. 安装MacPorts\n3. 通过MacPorts安装gmake、git 和GPG\n```\n$ POSIXLY_CORRECT=1 sudo port install gmake libsdl git gnupg\n```\n如果使用Mac OS X v10.4，还需要\n```\n$ POSIXLY_CORRECT=1 sudo port install bison\n```\n\n##### 3.设置文件描述符限制\n在Mac OS，在同时进行的文件描述符数的缺省限制开太低，高度并行构建过程可能会超过此限制。\n为了提高上限，添加以下行到你的〜/ .bash_profile中：\n```\n# set the number of open files to be 1024\nulimit -S -n 1024\n```\n\n# 下载Android源码\n### 一、安装Repo\n##### 1.确保拥有~/bin目录\n```\n$ mkdir ~/bin\n$ PATH=~/bin:$PATH\n```\n\n#####2.下载Repo工具并确保他是可执行的\n```\n$ curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo\n$ chmod a+x ~/bin/repo\n```\n\n### 二、安装一个Repo Client\n##### 1.建立代码要下载到的目录：\n在第一项内容中我们已经建立了一个区分大小写的磁盘镜像，加载之，然后在里面执行:\n```\n$ mkdir WORKING_DIRECTORY\n$ cd WORKING_DIRECTORY\n```\n\n##### 2.设置您的Git账户：\n\n```\n$ git config --global user.name \"Your Name\"\n$ git config --global user.email \"you@example.com\"\n```\n\n##### 3.执行repo init  ，你必须指定一个mainfest的URL，这将决定接下来下载的版本。\n\n```\n$ repo init -u https://android.googlesource.com/platform/manifest\n```\n如果需要下载一个master之外的分支，通过-b 指定。所有分支的列表：  [Source Code Tags and Builds](https://source.android.com/source/build-numbers.html#source-code-tags-and-builds)。\n```\n$ repo init -u https://android.googlesource.com/platform/manifest -b android-4.0.1_r1\n```\n执行完成会看到相应提示，这时Repo客户端的目录下将会包含.repo  目录。\n\n### 三、开始下载代码\n```\n$ repo sync\n```\n取决于你的网速。这将会花费一个小时或者更多时间才能下载完。\n\n# 编译Android源码\n**设置环境**\n```\n$ source build/envsetup.sh\n```\n或者\n```\n$ . build/envsetup.sh\n```\n\n**选择一个编译的目标**\n\n```\n$ lunch aosp_arm-eng\n```\nBuildtype | Use \n------------ | ------------- \nuser| limited access; suited for production\nuserdebug| like \"user\" but with root access and debuggability; preferred for debugging\neng | development configuration with additional debugging tools\n\n**编译源码**\n```\n$ make -j4\n```\n\n**编译过程中遇到的问题**\n据说人品好的可以一次编译通过，但是我在其中遇到了几个问题：\n1.内存移除    给出的提示是：`GC overhead limit exceeded Try increasing heap size with java option '-Xmx<size>'`\n于是我根据提示增加了分配内存：\n```\nexport JVM_ARGS=\"-Xmx4096m -XX:MaxPermSize=1024m\"\n```\n之后再次运行，编译一段时间后依然OOM报错：\n于是我再次增加了内存：\n```\nexport JVM_ARGS=\"-Xmx6144m -XX:MaxPermSize=2048m\"\n```\n运行一段时间依然报错...只能求助Google：得一文：http://www.cnblogs.com/hucn/p/3572384.html\n将设置改为：\n```\nexport JVM_ARGS=\"-Xmx6144m -XX:-UseGCOverheadLimit\"\n```\n重新编译，然后虽得到无数Warning，漫长等待后还是编译通过了。\n\n# 将Android源码导入到Android Studio阅读\n请参考工匠若水的博客，写的很详细：\n[使用Android Studio导入源码](http://blog.csdn.net/yanbober/article/details/48846331)\n\n##参考链接\n[Android 源码官网](https://source.android.com/source/initializing.html)\n[OS X 10.11下载和编译Android6.0源码](https://liuzhichao.com/2016/osx-download-and-build-android-source.html)\n[Mac OSX 10.11 EI 编译 Android 6.0 Marshmallow 源码](http://wjk20120522.github.io/2015/11/25/Mac-OSX-10-11-EI-%E7%BC%96%E8%AF%91-Android-6-0-Marshmallow-%E6%BA%90%E7%A0%81/)\n[在Mac 10.11中编译Android 6.0源码](http://seewhy.me/2016/01/01/aospcompilation/)\n[Android Open Source Project Site](https://source.android.com/source/initializing.html)"
    }
  ]
}